---
import { getCollection } from "astro:content";
import MainLayout from "../../layouts/MainLayout.astro";
import { Calendar, GitBranch, ExternalLink, ArrowLeft } from "lucide-react";

// Generate static paths for all projects
export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

const { project } = Astro.props;
const { Content } = await project.render();

const statusColors = {
  completed:
    "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200",
  "in-progress":
    "bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200",
  planned: "bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200",
};
---

<MainLayout
  title={`${project.data.title} - Kane Montreuil`}
  description={project.data.description}
>
  <article class="container py-16">
    {/* Back Link */}
    <a
      href="/projects"
      class="inline-flex items-center space-x-2 text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 mb-8"
    >
      <ArrowLeft size={20} />
      <span>Back to Projects</span>
    </a>

    {/* Project Header */}
    <header class="max-w-4xl">
      <h1 class="text-4xl font-bold">{project.data.title}</h1>
      <p class="mt-4 text-xl text-gray-600 dark:text-gray-400">
        {project.data.description}
      </p>

      {/* Meta Information */}
      <div class="mt-6 flex flex-wrap gap-4 items-center">
        <div class="flex items-center gap-1 text-gray-500 dark:text-gray-400">
          <Calendar size={20} />
          <span>
            {
              project.data.date.toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
              })
            }
          </span>
        </div>

        <span
          class={`px-3 py-1 rounded-full text-sm ${statusColors[project.data.status]}`}
        >
          {
            project.data.status.charAt(0).toUpperCase() +
              project.data.status.slice(1)
          }
        </span>

        {/* External Links */}
        {
          project.data.sourceUrl && (
            <a
              href={project.data.sourceUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="flex items-center space-x-1 text-gray-600 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400"
            >
              <GitBranch size={20} />
              <span>Source Code</span>
            </a>
          )
        }
        {
          project.data.demoUrl && (
            <a
              href={project.data.demoUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="flex items-center space-x-1 text-gray-600 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400"
            >
              <ExternalLink size={20} />
              <span>Live Demo</span>
            </a>
          )
        }
      </div>

      {/* Tags */}
      <div class="mt-6 flex flex-wrap gap-2">
        {
          project.data.tags.map((tag) => (
            <span class="px-3 py-1 rounded-full text-sm bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300">
              {tag}
            </span>
          ))
        }
      </div>

      {/* Tech Stack */}
      <div class="mt-6">
        <h3 class="text-sm font-medium text-gray-500 dark:text-gray-400 mb-2">
          Tech Stack:
        </h3>
        <div class="flex flex-wrap gap-2">
          {
            project.data.stack.map((tech) => (
              <span class="px-2 py-1 rounded text-sm bg-gray-50 dark:bg-gray-900 text-gray-600 dark:text-gray-400">
                {tech}
              </span>
            ))
          }
        </div>
      </div>
    </header>

    {/* Project Content */}
    <div class="mt-12 mx-auto max-w-4xl">
      <div class="prose dark:prose-invert max-w-none">
        <Content />
      </div>
    </div>
  </article>
</MainLayout>
